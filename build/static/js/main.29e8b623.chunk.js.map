{"version":3,"sources":["hoc/AuxHoc.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControls/BuildControls.js","components/Burger/BuildControls/BuildControls.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","axios-order.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler.js","store/actions/auth.js","store/actions/actionTypes.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/order.js","components/Order/Checkout/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/utilitiy.js","store/reducers/auth.js","index.js","components/Burger/BurgerIngredient/BurgerIngredient.css","components/UI/Input/Input.css","components/Navigation/SideDrawer/SideDrawer.css","components/Burger/BuildControls/BuildControls/BuildControl.css","components/Navigation/Toolbar/Toolbar.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.css","components/Burger/BuildControls/BuildControls.css","components/UI/Button/Button.css","components/Layout/Layout.css","assets/images/burger-logo.png","components/Logo/Logo.css","components/Navigation/NavigationItems/NavigationItems.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.css","components/UI/Backdrop/Backdrop.css","components/UI/Modal/Modal.css","components/Burger/Burger.css","components/UI/Spinner/Spinner.css","components/Order/Checkout/CheckoutSummary.css","containers/Checkout/ContactData/ContactData.css","components/Order/Order.css","containers/Auth/Auth.css"],"names":["aux","props","children","logo","react_default","a","createElement","className","classes","Logo","src","logopng","alt","navigationItem","NavigationItem","NavLink","to","link","exact","activeClassName","active","navigationItems","NavigationItems","NavigationItem_NavigationItem","isAuthenticate","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","DrawerToggle_DrawerToggle","drawerToggleClick","Logo_Logo","DesktopOnly","NavigationItems_NavigationItems","isAuth","backdrop","show","Backdrop","Modal","nextProps","nextState","this","AuxHoc","Backdrop_Backdrop","modalClosed","style","transform","opacity","React","Component","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","join","Layout","state","showSideDrawer","setState","console","log","prevState","Toolbar_Toolbar","isAuthenticated","bind","SideDrawer_SideDrawer","sideDrawerClosedHandler","Content","connect","auth","token","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","burger","ingredients","transformedIngredients","Object","keys","map","igKey","toConsumableArray","Array","_","i","Burger_BurgerIngredient_BurgerIngredient","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Lable","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","BuildControls_BuildControls","ingredientAddet","ingredientRemoved","ordered","OrderButton","purchaseable","button","Button","btnType","OrderSummary","_this","ingredientSummary","textTransform","Button_Button","purchaseCanceled","purchaseContinue","instance","axios","create","baseURL","spinner","Loader","withErrorHandler","WrappedComponent","_React$Component","_class2","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","errorConfrimHandler","error","reqInercepteros","interceptors","request","use","req","respInercepteros","response","resp","inherits","createClass","value","eject","UI_Modal_Modal","message","logout","localStorage","removeItem","checkAuthTimeOut","expireTimeOut","dispatch","setTimeout","authSuccess","userId","idToken","setAuthRedirectPath","path","BulgerBuilder","purchasing","updatePurchase","sum","purchaseHandler","onSetRedirectPath","history","push","purchaseCancelHandler","purchaseContinueHandler","onInitPurchased","onInitIngredients","disabledInfo","objectSpread","ings","orderSummary","Burger_OrderSummary_OrderSummary","Spinner_Spinner","Burger_Burger","Burger_BuildControls_BuildControls","onIngredientAdded","onIngredientRemoved","burgerBuilder","totalPrice","ingName","ingredientName","get","then","data","catch","burgerBuilderActions","checkoutSummary","CheckoutSummary","width","height","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputtype","assign","elementConfig","InputElement","onChange","changed","options","option","displayValue","Input","Label","ContactData","orderForm","name","elementType","placeholder","validation","required","street","zipCode","country","email","deliverMethod","orderHander","event","preventDefault","formData","formElementIdentifier","order","orderData","onOrderBurger","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","_this2","formElementsArray","id","config","form","onSubmit","formElement","Input_Input","loading","post","orderId","purchaseBurgerSuccess","purchaseBurgerFail","actions","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","Redirect","purchasedRedirect","purchased","Checkout_CheckoutSummary","Route","match","component","amount","ig","display","padding","border","Order","Number","parseFloat","Orders","onFetchOrders","orders","Order_Order","queryParams","res","fetchOrders","err","Auth","password","isSignup","submitHnadler","onAuth","switchAuthModeHandler","controlName","updatedConstrols","defineProperty","buildingBurger","onSetAuthRedirectPath","errorMessage","authRedirect","authRedirectPath","building","dispathc","authData","returnSecureToken","url","setItem","expirationDate","Date","getTime","expiresIn","localId","Logout","onLogout","App","onTryAuthoSignUp","routes","Switch","exac","BurgerBuilder","components_Layout_Layout","withRouter","getItem","Boolean","window","location","hostname","initialState","INGREDIENTS_PRICES","salad","cheese","meat","bacon","reducer","arguments","undefined","action","newOder","updateObject","oldObject","updatedProperties","authStart","authFail","authLogout","composeEnhancers","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","es","BrowserRouter","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","enable","Success","Danger","__webpack_require__","p","load6","round"],"mappings":"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","file":"static/js/main.29e8b623.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst aux = (props) => props.children;\r\n\r\nexport default aux;","import React from 'react';\r\nimport logopng  from '../../assets/images/burger-logo.png';\r\nimport classes from './Logo.css';\r\n\r\nconst logo = (props) => (\r\n    <div className={classes.Logo}>\r\n        <img src={logopng} alt=\"MyBurger\"/>\r\n    </div>\r\n);\r\n\r\nexport default logo;","import React from 'react';\r\nimport classes from './NavigationItem.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst navigationItem = (props) => (\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink \r\n            to={props.link}\r\n            exact={props.exact}\r\n            activeClassName={classes.active}>{props.children}</NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\nimport classes from './NavigationItems.css';\r\nimport NavigationItem from \"./NavigationItem/NavigationItem\";\r\n\r\nconst navigationItems = (props) => (\r\n    <ul className={classes.NavigationItems}>\r\n       <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\r\n       {props.isAuthenticate ? <NavigationItem link=\"/orders\">Orders</NavigationItem> : null}\r\n       {\r\n           !props.isAuthenticate ?\r\n           <NavigationItem link=\"/auth\">Auth</NavigationItem> : <NavigationItem link=\"/logout\">Logout</NavigationItem>\r\n       }\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\r\nimport classes from './DrawerToggle.css';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default drawerToggle;","import React from 'react';\r\nimport classes from './Toolbar.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = (props) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.drawerToggleClick}/>\r\n        <div className={classes.Logo}>\r\n            <Logo/>\r\n        </div>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems isAuthenticate={props.isAuth}/>\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\n\r\nimport classes from './Backdrop.css';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div>: null\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport classes from './Modal.css';\r\nimport Aux from '../../../hoc/AuxHoc';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends React.Component{\r\n\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        return nextProps.show !== this.props.show || this.props.children !== nextProps.children;\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n        <Aux>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n                <div className={classes.Modal}\r\n                style={{\r\n                    transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                    opacity: this.props.show ? '1' : '0'\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </div>\r\n        </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../../Navigation/NavigationItems/NavigationItems';\r\nimport classes from './SideDrawer.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Aux from '../../../hoc/AuxHoc';\r\nimport Modal from '../../UI/Modal/Modal';\r\n\r\nconst sideDrawer = (props) => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n    if(props.open){\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n    }\r\n    return (\r\n        <Aux>\r\n            <Backdrop show={props.open} clicked={props.closed}/>\r\n            <div className={attachedClasses.join(' ')} onClick={props.closed}>\r\n                    <div className={classes.Logo}>\r\n                        <Logo/>\r\n                    </div>\r\n                    <nav>\r\n                        <NavigationItems isAuthenticate={props.isAuth} />\r\n                    </nav>\r\n                </div>            \r\n        </Aux>        \r\n    );\r\n}\r\n\r\n\r\nexport default sideDrawer;","import React, {Component} from 'react';\r\nimport Aux from '../../hoc/AuxHoc';\r\nimport classes from './Layout.css';\r\nimport Toolbar from '../Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Layout extends Component {\r\n\r\n    state = {\r\n        showSideDrawer: true\r\n    };\r\n\r\n    sideDrawerClosedHandler() {\r\n        this.setState({showSideDrawer: false});\r\n    };\r\n\r\n    drawerToggleClick() {\r\n        console.log(\"asdfsadf\");\r\n        this.setState((prevState)=>{\r\n            return {showSideDrawer: !prevState.showSideDrawer}\r\n        });\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <Aux>\r\n                <Toolbar isAuth={this.props.isAuthenticated} drawerToggleClick={this.drawerToggleClick.bind(this)}/>\r\n                <SideDrawer isAuth={this.props.isAuthenticated} open={this.state.showSideDrawer} closed={this.sideDrawerClosedHandler.bind(this)} />\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated: state.auth.token !== null\r\n    };\r\n}\r\nexport default connect(mapStateToProps)(Layout);","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classes from './BurgerIngredient.css';\r\n\r\nclass BurgerIngredient extends Component  {\r\n\r\n    render(){\r\n        let ingredient = null;\r\n\r\n        switch(this.props.type){\r\n            case (\"bread-bottom\"):\r\n                ingredient = <div className={classes.BreadBottom}></div>;\r\n                break;\r\n            case (\"bread-top\"):\r\n                ingredient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case (\"meat\"):\r\n                ingredient = <div className={classes.Meat}></div>;\r\n                break;\r\n            case (\"cheese\"):\r\n                ingredient = <div className={classes.Cheese}></div>;\r\n                break;\r\n            case (\"bacon\"):\r\n                ingredient = <div className={classes.Bacon}></div>;\r\n                break;\r\n            case (\"salad\"):\r\n                ingredient = <div className={classes.Salad}></div>;\r\n                break;\r\n            default: \r\n                    ingredient = null;\r\n        }\r\n\r\n        return ingredient;\r\n    }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport classes from './Burger.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n//import {withRouter} from 'react-router-dom';\r\n\r\nconst burger = (props) =>{\r\n    console.log(props.ingredients);\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n        .map(igKey => {\r\n            return [...Array(props.ingredients[igKey])].map((_, i)=>{\r\n                return <BurgerIngredient key={igKey + i} type={igKey} />\r\n            });\r\n        }).reduce((arr, el)=>{\r\n            return arr.concat(el);\r\n        },[]);\r\n\r\n        if(transformedIngredients.length === 0)\r\n         {\r\n            transformedIngredients = <p>Please start adding ingredients!</p>\r\n         }\r\n\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\"/>\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default burger;\r\n//export default withRouter(burger);","import React from 'react';\r\nimport classes from './BuildControl.css';\r\n\r\nconst buildControl = (props) =>(\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Lable}>{props.label}</div>\r\n        <button className={classes.Less} onClick={props.removed} disabled={props.disabled}>Less</button>\r\n        <button className={classes.More} onClick={props.added}>More</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\nimport classes from './BuildControls.css';\r\nimport BuildControl from './BuildControls/BuildControls';\r\n\r\nconst controls = [\r\n    {label: 'Salad', type: 'salad'},\r\n    {label: 'Bacon', type: 'bacon'},\r\n    {label: 'Cheese', type: 'cheese'},\r\n    {label: 'Meat', type: 'meat'},\r\n];\r\n\r\nconst buildControls = (props) => (\r\n    <div className={classes.BuildControls}>\r\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\r\n        {controls.map(ctrl => (\r\n            <BuildControl \r\n                key={ctrl.label} \r\n                label={ctrl.label}\r\n                added={() => props.ingredientAddet(ctrl.type)} \r\n                removed={()=> props.ingredientRemoved(ctrl.type)} \r\n                disabled={props.disabled[ctrl.type]}/>\r\n        ))}\r\n\r\n        <button onClick={props.ordered} className={classes.OrderButton} disabled={!props.purchaseable}>{ props.isAuth? \"ORDER NOW\" : \"SIGN UP TO ORDER\"}</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import React from 'react';\r\nimport classes from './Button.css';\r\n\r\nconst button = (props) => {\r\n    return (\r\n        <button\r\n            className={[classes.Button, classes[props.btnType]].join(' ')}\r\n            onClick={props.clicked}>{props.children}</button>\r\n    );\r\n}\r\n\r\nexport default button;","import React from 'react';\r\nimport Aux from '../../../hoc/AuxHoc';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nclass OrderSummary extends React.Component {\r\n      \r\n     render(){\r\n        \r\n        const ingredientSummary = Object.keys(this.props.ingredients).map(igKey=>{\r\n            return <li key={igKey}><span style={{textTransform: \"capitalize\"}}>{igKey}</span>: {this.props.ingredients[igKey]}</li>\r\n        });\r\n\r\n        return (\r\n            <Aux>\r\n                <h3>Your Order</h3>\r\n                <p>A delicious burger with the following ingredients:</p>\r\n                <ul>\r\n                   {ingredientSummary}\r\n                </ul>\r\n                <p><strong>Total Price: {this.props.price}</strong></p>\r\n                <p>Continue to Checkout</p>\r\n                <Button btnType=\"Danger\" clicked={this.props.purchaseCanceled}>CANCEL</Button>\r\n                <Button btnType=\"Success\" clicked={this.props.purchaseContinue}>CONTINUE</Button>\r\n            </Aux>\r\n        );\r\n     }\r\n};\r\n\r\nexport default OrderSummary;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://react-my-burger-789d8.firebaseio.com/\"\r\n});\r\n\r\nexport default instance;","import React from 'react';\r\nimport classes from './Spinner.css';\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default spinner;","import React from 'react';\r\nimport Modal from '../components/UI/Modal/Modal';\r\nimport Aux from './AuxHoc';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return class extends React.Component {\r\n\r\n        constructor(props){\r\n            super(props);\r\n            this.reqInercepteros = axios.interceptors.request.use(req=>{\r\n                this.setState({error: null});\r\n                return req;\r\n            });\r\n            this.respInercepteros = axios.interceptors.response.use(resp => resp, error => {\r\n                this.setState({error: error});\r\n            });\r\n\r\n            this.state = {\r\n                error: null\r\n            }\r\n        }\r\n      \r\n        componentWillUnmount(){\r\n            axios.interceptors.request.eject(this.reqInercepteros);            \r\n            axios.interceptors.response.eject(this.respInercepteros);\r\n        }  \r\n        \r\n        errorConfrimHandler = () => {\r\n            this.setState({error: null});\r\n        }\r\n        render(){\r\n            return (\r\n                <Aux>\r\n                    <Modal\r\n                        clicked={this.errorConfrimHandler} \r\n                        modalClosed={this.state.error}>\r\n                        {this.state.error ? this.state.error.message: null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Aux>\r\n            );\r\n        }\r\n    }\r\n};\r\n\r\nexport default withErrorHandler;","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    };\r\n};\r\n\r\nexport const checkAuthTimeOut = (expireTimeOut) => {\r\n    console.log(expireTimeOut);\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expireTimeOut * 1000);\r\n    };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    console.log(token);\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId\r\n    };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const auth = (email, password, isSignup) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        };\r\n        \r\n        let url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyCl5OoYFulIiVikKuqeIGpEYtuKSEVvBO0';\r\n        if(isSignup){\r\n            url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyCl5OoYFulIiVikKuqeIGpEYtuKSEVvBO0';\r\n        }\r\n        \r\n        axios.post(url, authData)\r\n             .then( response => {\r\n                 localStorage.setItem('token', response.data.idToken);\r\n                 const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n                 localStorage.setItem('expirationDate', expirationDate);\r\n                 localStorage.setItem('userId', response.data.localId);\r\n                 dispatch(authSuccess(response.data));\r\n                 dispatch(checkAuthTimeOut(response.data.expiresIn))\r\n             })\r\n             .catch(err => {\r\n                 dispatch(authFail(err.response.data.error));\r\n             });\r\n    };\r\n};\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    }\r\n};\r\n\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if(!token){\r\n            dispatch(logout());\r\n        }else{\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if(expirationDate <= new Date()){\r\n                dispatch(logout());\r\n            }else{\r\n                const userId = localStorage.getItem('userId');\r\n                dispatch(authSuccess(token, userId));\r\n                dispatch(checkAuthTimeOut((expirationDate.getTime() - new Date().getTime())/1000));\r\n            }\r\n        }\r\n    };\r\n};","export const ADD_INGREDIENTS = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENT = 'SET_INGREDIENT';\r\nexport const FETCH_INGREDIENT_FAILED = 'SET_INGREDIENT';\r\n\r\nexport const PURCHASE_BURGER_START = \"PURCHASE_BURGER_START\";\r\nexport const PURCHASE_BURGER_SUCCESS = \"PURCHASE_BURGER_SUCCESS\";\r\nexport const PURCHASE_BURGER_FAIL = \"PURCHASE_BURGER_FAIL\";\r\nexport const PURCHASE_INIT = \"PURCHASE_INIT\";\r\n\r\nexport const FETCH_ORDERS_START = \"FETCH_ORDERS_INIT\";\r\nexport const FETCH_ORDERS_SUCCESS = \"FETCH_ORDERS_SUCCESS\";\r\nexport const FETCH_ORDERS_FAIL = \"FETCH_ORDERS_FAIL\";\r\n\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';","import React, {Component} from 'react';\r\nimport Aux from '../../hoc/AuxHoc';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport axios from '../../axios-order';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler';\r\nimport {connect} from 'react-redux';\r\nimport * as burgerBuilderActions from '../../store/actions/index';\r\nimport { stat } from 'fs';\r\n\r\nclass BulgerBuilder extends Component{\r\n\r\n    state = {\r\n        purchasing: false\r\n    };\r\n\r\n    updatePurchase = (ingredients) => {\r\n        \r\n        const sum = Object.keys(ingredients).map(igKey => {\r\n            return ingredients[igKey];\r\n        }).reduce((sum, el) => {\r\n            return sum + el;\r\n        }, 0);\r\n\r\n        return sum > 0;\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        if(this.props.isAuthenticated){\r\n            this.setState({purchasing: true});\r\n        }else{\r\n            this.props.onSetRedirectPath('/checkout');\r\n            this.props.history.push('/auth');\r\n        }        \r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({purchasing: false})\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        this.props.onInitPurchased();\r\n        this.props.history.push('/checkout');\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.onInitIngredients();\r\n    }\r\n\r\n    render(){\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        };\r\n\r\n        for(let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <= 0;\r\n        }\r\n\r\n        let orderSummary = null;\r\n        \r\n        if(this.props.ings){\r\n            orderSummary = <OrderSummary ingredients={this.props.ings} \r\n            purchaseCanceled={this.purchaseCancelHandler}\r\n            purchaseContinue={this.purchaseContinueHandler}\r\n            price={this.props.price}\r\n            />\r\n        }\r\n        \r\n        let burger = <Spinner/>;\r\n\r\n        if(this.props.ings){\r\n            \r\n            burger = (\r\n                <div>\r\n                     <Burger ingredients={this.props.ings}></Burger>\r\n                     <BuildControls\r\n                        ingredientAddet={this.props.onIngredientAdded}\r\n                        ingredientRemoved={this.props.onIngredientRemoved} \r\n                        disabled={disabledInfo}\r\n                        purchaseable={this.updatePurchase(this.props.ings)}\r\n                        ordered={this.purchaseHandler}\r\n                        price={this.props.price}\r\n                        isAuth={this.props.isAuthenticated}/>\r\n                </div>\r\n             );\r\n        }\r\n\r\n        return(\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} modalClosed={this  .purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Aux>\r\n        );\r\n    };\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error,\r\n        isAuthenticated: state.auth.token !== null\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return {\r\n        onIngredientAdded: (ingName) => dispatch(burgerBuilderActions.addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) => dispatch(burgerBuilderActions.removeIngredient(ingName)),\r\n        onInitIngredients: () => dispatch(burgerBuilderActions.initIngredients()),\r\n        onInitPurchased: () => dispatch(burgerBuilderActions.purchaseInit()),\r\n        onSetRedirectPath: (path) => dispatch(burgerBuilderActions.setAuthRedirectPath(path))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BulgerBuilder, axios));","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-order';\r\n\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENTS,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const setIngredients = (ingredients) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENT,\r\n        ingredients: ingredients\r\n    };\r\n}\r\n\r\nexport const fetchIngredientsFailed = () =>{\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENT_FAILED\r\n    }\r\n}\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('https://react-my-burger-789d8.firebaseio.com/ingredients.json')\r\n        .then(response => {\r\n             dispatch(setIngredients(response.data));\r\n        }).catch(error => {\r\n            dispatch(fetchIngredientsFailed());\r\n        });\r\n    };\r\n};","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-order';\r\n\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerFail = (error) =>{\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    };\r\n};\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post('/orders.json?auth=' + token, orderData).then(response => {\r\n           dispatch(purchaseBurgerSuccess(response.data, orderData)); \r\n        }).catch(error => {\r\n            dispatch(purchaseBurgerFail(error));     \r\n        });\r\n    }\r\n};\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    };\r\n};\r\n\r\nexport const fetchOrdersSucess = (orders) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    };\r\n};\r\n\r\nexport const fetchOrdersFails= (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    };\r\n};\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n    return dispatch => {\r\n        const queryParams = '?auth' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\r\n        axios.get('/orders.json' + queryParams)\r\n             .then(res => {\r\n                 const fetchOrders = [];\r\n                 for(let key in res.data){\r\n                    fetchOrders.push({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    });\r\n                 }\r\n\r\n                 dispatch(fetchOrdersSucess(fetchOrders));\r\n             })\r\n             .catch(err=>{\r\n                dispatch(fetchOrdersFails(err));\r\n             });\r\n    };\r\n};","import React from 'react';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckoutSummary.css'\r\n\r\nconst checkoutSummary = (props) => {\r\n\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>We hope it taste well!</h1>\r\n            <div style={{width: '100%', height: '300px', margin: 'auto'}}>\r\n                <Burger ingredients={props.ingredients}/>\r\n            </div>\r\n            <Button btnType=\"Danger\" clicked={props.checkoutCancelled}>CANCEL</Button>\r\n            <Button btnType=\"Success\" clicked={props.checkoutContinued}>CONTINUE</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default checkoutSummary;","import React from 'react';\r\nimport classes from './Input.css';\r\n\r\nconst input = (props) => {\r\n    \r\n    let inputElement = null;\r\n    \r\n    switch(props.inputtype){\r\n        case ('input'):\r\n            inputElement = <input {...props.elementConfig} className={classes.InputElement} value={props.value} onChange={props.changed}/>; \r\n            break;\r\n        case ('textarea'): \r\n            inputElement = <input {...props.elementConfig} className={classes.InputElement} value={props.value} onChange={props.changed}/>; \r\n            break;\r\n        case ('select'): \r\n            inputElement = (\r\n                <select className={classes.InputElement} value={props.value} onChange={props.changed}>\r\n                    {\r\n                        props.elementConfig.options.map(option => (\r\n                            <option key={option.value} value={option.value}>{option.displayValue}</option>\r\n                        ))\r\n                    }\r\n                </select>\r\n                ); \r\n            break;\r\n        default:\r\n            inputElement = <input {...props.elementConfig} className={classes.InputElement} value={props.value} onChange={props.changed}/>; \r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label} </label>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n} \r\n\r\n\r\nexport default input;","import React from 'react';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport classes from './ContactData.css';\r\nimport axios from '../../../axios-order';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport {connect} from 'react-redux';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler';\r\nimport * as actions from '../../../store/actions';\r\n\r\nclass ContactData extends React.Component{\r\n    state = {\r\n        orderForm:{\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig:{\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: '',\r\n                validation:{\r\n                    required: true\r\n                }\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig:{\r\n                    type: 'text',\r\n                    placeholder: 'Street'\r\n                },\r\n                value: '',\r\n                validation:{\r\n                    required: true\r\n                }\r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig:{\r\n                    type: 'text',\r\n                    placeholder: 'Zipcode'\r\n                },\r\n                value: '',\r\n                validation:{\r\n                    required: true\r\n                }\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig:{\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: '',\r\n                validation:{\r\n                    required: true\r\n                }\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig:{\r\n                    type: 'email',\r\n                    placeholder: 'E-Main'\r\n                },\r\n                value: '',\r\n                validation:{\r\n                    required: true\r\n                }\r\n            },\r\n            deliverMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options:[\r\n                        {value: 'fasted', displayValue: 'Fasted'},\r\n                        {value: 'cheapest', displayValue: 'Cheapest'}\r\n                ]    \r\n                },\r\n                value: 'fastest'\r\n            }\r\n        }\r\n    }\r\n\r\n    orderHander=(event) => {\r\n        event.preventDefault(); \r\n        \r\n        const formData = {};\r\n        for(let formElementIdentifier in this.state.orderForm){\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n        }\r\n        const order = {\r\n            ingredients: this.props.ings,\r\n            price: this.props.price,\r\n            orderData: formData,\r\n            userId: this.props.userId\r\n        };\r\n\r\n        this.props.onOrderBurger(order, this.props.token);       \r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        \r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm\r\n        };\r\n        const updatedFormElement = {\r\n            ...updatedOrderForm[inputIdentifier]\r\n        };\r\n        updatedFormElement.value = event.target.value;\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n        this.setState({orderForm: updatedOrderForm});\r\n    }\r\n\r\n    render(){\r\n        \r\n        const formElementsArray = [];\r\n        for(let key in this.state.orderForm){\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            });\r\n        }\r\n\r\n        let form = (<form onSubmit={this.orderHander}>\r\n            \r\n            {formElementsArray.map(formElement =>(\r\n                <Input key={formElement.id} inputtype = {formElement.config.elementType}\r\n                    elementConfig = {formElement.config.elementConfig}\r\n                    value = {formElement.value}\r\n                    changed={(event)=> {this.inputChangedHandler(event, formElement.id)}}    />\r\n            ))}\r\n            <Button btnType=\"Success\" >ORDER</Button>\r\n        </form>);\r\n\r\n        if(this.props.loading){\r\n            form=<Spinner/>\r\n        }\r\n\r\n        return(\r\n        <div className={classes.ContactData}>\r\n            <h4>Enter your Contac Data</h4>\r\n            {form}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        loading: state.burgerBuilder.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onOrderBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token))\r\n    }; \r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));\r\n","import React from 'react';\r\nimport CheckoutSummary from '../../components/Order/Checkout/CheckoutSummary';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport ContactData from './ContactData/ContactData';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nclass Checkout extends React.Component{\r\n\r\n    checkoutCancelledHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n    \r\n    render(){\r\n        let summary = <Redirect to=\"/\"/>\r\n\r\n        if(this.props.ings){\r\n            \r\n            const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null;\r\n\r\n            summary = <div>\r\n                {purchasedRedirect}\r\n                <CheckoutSummary ingredients={this.props.ings}\r\n                checkoutCancelled={this.checkoutCancelledHandler}\r\n                checkoutContinued={this.checkoutContinuedHandler}/>\r\n                <Route path={this.props.match.path + '/contact-data'} component={ContactData}/>\r\n            </div>\r\n        }\r\n        return summary;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        purchased: state.order.purchased\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onInitPurchase: () => dispatch(actions.purchaseInit())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\r\nimport classes from './Order.css';\r\n\r\nconst order = (props)=> {\r\n    \r\n    const ingredients = [];\r\n\r\n    for(let ingredientName in props.ingredients){\r\n        ingredients.push({\r\n            name: ingredientName,\r\n            amount:props.ingredients[ingredientName]\r\n        });\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return <span \r\n            style={{textTransform: 'capitalize',\r\n            display: 'inline-block',\r\n            padding: '5px',\r\n            margin: '0 8px',\r\n            border: '1px solid #ccc'\r\n                \r\n        }}\r\n        key={ig.name}>{ig.name} {ig.amount}</span>\r\n    });\r\n\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: Salad (1)</p>\r\n            <p>Price: <strong>{Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n        </div>\r\n    );\r\n}\r\n    \r\n\r\nexport default order;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-order';\r\nimport withErrorHandler from '../../hoc/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Orders extends React.Component{\r\n\r\n    componentDidMount(){\r\n        this.props.onFetchOrders(this.props.token, this.props.userId);\r\n    }\r\n\r\n    render(){\r\n        let orders = <Spinner />;\r\n        return (\r\n            \r\n            <div>\r\n                {this.props.orders.map(order => (\r\n                    <Order \r\n                        key={order.id}\r\n                        ingredients={order.ingredients}\r\n                        price={order.price}\r\n                        />\r\n                ))}\r\n            </div>\r\n        );\r\n    }    \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token,userId) => dispatch(actions.fetchOrders(token,userId))\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","import React, { Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport classes from './Auth.css';\r\nimport * as actions from '../../store/actions/index';\r\nimport axios from 'axios';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass Auth extends Component {\r\n    state = {\r\n        controls: {\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig:{\r\n                    type: 'email',\r\n                    placeholder: 'Mail Address'\r\n                },\r\n                value: '',\r\n                validation:{\r\n                    required: true\r\n                }\r\n            },\r\n            password: {\r\n                elementType: 'input',\r\n                elementConfig:{\r\n                    type: 'password',\r\n                    placeholder: 'Password'\r\n                },\r\n                value: '',\r\n                validation:{\r\n                    required: true\r\n                }\r\n            }           \r\n        },\r\n        isSignup: true\r\n    };\r\n\r\n    inputChangedHandler(event, controlName){\r\n        const updatedConstrols = {\r\n            ...this.state.controls,\r\n            [controlName]: {\r\n                ...this.state.controls[controlName],\r\n                value: event.target.value\r\n            }\r\n        }\r\n        this.setState({controls: updatedConstrols});\r\n    }\r\n\r\n    submitHnadler = (event) =>{\r\n        event.preventDefault();\r\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignup);\r\n    }\r\n\r\n    switchAuthModeHandler = () => {\r\n        \r\n        this.setState(prevState => {\r\n            return {\r\n                isSignup: !prevState.isSignup\r\n            };\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.buildingBurger && this.props.onSetAuthRedirectPath !== '/'){\r\n            this.props.onSetAuthRedirectPath();\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        const formElementsArray = [];\r\n        for(let key in this.state.controls){\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.controls[key]\r\n            });\r\n        }\r\n\r\n        let form = formElementsArray.map(formElement => {\r\n             return <Input \r\n                key={formElement.id} inputtype = {formElement.config.elementType}\r\n                elementConfig = {formElement.config.elementConfig}\r\n                value = {formElement.value}\r\n                changed={(event)=> {this.inputChangedHandler(event, formElement.id)}}                \r\n                />\r\n        });\r\n        \r\n        if(this.props.loading)\r\n        {\r\n            form = <Spinner/>\r\n        }\r\n\r\n        let errorMessage = null;\r\n\r\n        if(this.props.error){\r\n            errorMessage = (\r\n                <p>{this.props.error.message}</p>\r\n            );\r\n        }\r\n\r\n        let authRedirect = null;\r\n        if(this.props.isAuthenticated)\r\n        {\r\n            authRedirect = <Redirect to={this.props.authRedirectPath}/>\r\n        }\r\n\r\n        return (\r\n            <div  className={classes.Auth}>\r\n                {authRedirect}\r\n                {errorMessage}\r\n                <form onSubmit={this.submitHnadler}>\r\n                {form}\r\n                <Button btnType=\"Success\">Auth</Button>\r\n                </form>\r\n                <Button clicked={this.switchAuthModeHandler} btnType=\"Success\">SWITCH TO {this.state.isSignup? \"SIGNIN\" : \"SIGNUP\"}</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.auth.loading,\r\n        error: state.auth.error,\r\n        isAuthenticated: state.auth.token !== null,\r\n        buildingBurger: state.burgerBuilder.building,\r\n        authRedirectPath: state.auth.authRedirectPath\r\n    };\r\n};\r\n\r\nconst mapDispathToProps = dispathc => {\r\n    return {\r\n        onAuth: (email, password, isSignup) => dispathc(actions.auth(email, password, isSignup)),\r\n        onSetAuthRedirectPath: () => dispathc(actions.setAuthRedirectPath('/'))\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispathToProps)(Auth);","import React, {Component} from 'react';\r\nimport * as actions from '../../../store/actions/index';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Logout extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.onLogout();\r\n    }\r\n\r\n    render(){\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n}\r\n\r\nconst mapDispathToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(actions.logout())\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispathToProps)(Logout);","import React, { Component } from 'react';\nimport Layout from './components/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport {Route, Switch, withRouter, Redirect} from 'react-router-dom';\nimport Orders from './containers/Orders/Orders';\nimport Auth from './containers/Auth/Auth';\nimport Logout from './containers/Auth/Logout/Logout';\nimport {connect} from 'react-redux';\nimport * as actions from './store/actions/index';\n\nclass App extends Component {\n  \n  componentDidMount(){\n     \n    this.props.onTryAuthoSignUp();\n  }\n\n  render() {\n\n    let routes = (\n      <Switch> \n        <Route path=\"/auth\" exac component={Auth}/>\n        <Route path=\"/\" component={BurgerBuilder}/>  \n        <Redirect to='/'/>\n      </Switch>\n    );\n    if(this.props.isAuthenticate){\n      routes = (\n        <Switch>            \n          <Route path=\"/checkout\" exac component={Checkout}/>\n          <Route path=\"/orders\" exac component={Orders}/>\n          <Route path=\"/logout\" component={Logout}/>\n          <Route path=\"/auth\" exac component={Auth}/>\n          <Route path=\"/\" component={BurgerBuilder}/>            \n      </Switch>\n      );\n    }\n    \n    return (\n      <div>\n        <Layout>\n          {routes}\n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticate: state.auth.token !== null\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAuthoSignUp: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 0,\r\n    error: false,\r\n    building: false\r\n};\r\n\r\nconst INGREDIENTS_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 0.7,\r\n    bacon: 0.7\r\n};\r\n\r\nconst reducer = (state= initialState, action) => {\r\n    switch(action.type){\r\n        case actionTypes.ADD_INGREDIENTS: \r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\r\n                },\r\n                totalPrice: state.totalPrice + INGREDIENTS_PRICES[action.ingredientName],\r\n                building: true\r\n            };\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\r\n                },\r\n                totalPrice: state.totalPrice - INGREDIENTS_PRICES[action.ingredientName],\r\n                building: true\r\n            };\r\n        case actionTypes.SET_INGREDIENT:\r\n            return {\r\n                ...state,\r\n                ingredients: action.ingredients,\r\n                error: false,\r\n                totalPrice: 4,\r\n                building: false\r\n            };\r\n        case actionTypes.FETCH_INGREDIENT_FAILED:\r\n            return {\r\n                ...state,\r\n                error: true\r\n            };\r\n        default: \r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: true,\r\n    purchased: false\r\n};\r\n\r\nconst reducer = (state =initialState, action) => {\r\n    switch(action.type){\r\n        case actionTypes.PURCHASE_INIT: \r\n            return {\r\n                ...state,\r\n                purchased: false\r\n            };\r\n        case actionTypes.PURCHASE_BURGER_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n            const newOder = {\r\n                ...action.orderData,\r\n                id: action.orderId                \r\n            };\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                purchased: true,\r\n                orders: state.orders.concat(newOder)\r\n            };\r\n        case actionTypes.PURCHASE_BURGER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            };\r\n        case actionTypes.FETCH_ORDERS_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case actionTypes.FETCH_ORDERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                orders: action.orders,\r\n                loading: false\r\n            };\r\n        case actionTypes.FETCH_ORDERS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};","import * as actionTypes from '../actions/actionTypes';\r\nimport {updateObject} from '../utilitiy';\r\n\r\nconst initialState = {\r\n\ttoken: null,\r\n\tuserId: null,\r\n\terror: null,\r\n\tloading: false,\r\n\tauthRedirectPath: '/'\r\n};\r\n\r\nconst authStart = (state, action) => {\r\n\treturn updateObject(state, {error: null, loading: true});\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n\tconsole.log(action);\r\n\treturn updateObject(state, {\r\n\t\ttoken: action.idToken.idToken,\r\n\t\tuserId: action.userId,\r\n\t\terror: null,\r\n\t\tloading: false\r\n\t});\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n\treturn updateObject(state, {\r\n\t\terror:action.error,\r\n\t\tloading: true\r\n\t});\r\n};\r\n\r\nconst authLogout = (state, action) => {\r\n\treturn updateObject(state, {\r\n\t\ttoken: null,\r\n\t\tuserId: null\r\n\t});\r\n};\r\n\r\nconst setAuthRedirectPath = (state, action) => {\r\n\treturn updateObject(state, {\r\n\t\tauthRedirectPath: action.path\r\n\t});\r\n};\r\n\r\nconst reducer = (state = initialState, action) =>{\r\n\tswitch(action.type){\r\n\t\tcase actionTypes.AUTH_START: return authStart(state, action);\r\n\t\tcase actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\r\n\t\tcase actionTypes.AUTH_FAIL: return authFail(state, action);\r\n\t\tcase actionTypes.AUTH_LOGOUT: return authLogout(state, action);\r\n\t\tcase actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state, action);\r\n\t\tdefault: \r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware, compose, combineReducers} from 'redux';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport thunk from 'redux-thunk';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\n\nconst composeEnhancers = process.env.NODE_ENV == 'development'? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__: null || compose;\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer,\n    auth: authReducer\n});\n\nconst store = createStore(\n    rootReducer, composeEnhancers(\n        applyMiddleware(thunk)\n    ),\n    \n);\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient__BreadBottom__2z9NQ\",\"BreadTop\":\"BurgerIngredient__BreadTop__2Pkwe\",\"Seeds1\":\"BurgerIngredient__Seeds1__2k2x7\",\"Seeds2\":\"BurgerIngredient__Seeds2__9Mret\",\"Meat\":\"BurgerIngredient__Meat__1LdrR\",\"Cheese\":\"BurgerIngredient__Cheese__1eqwP\",\"Salad\":\"BurgerIngredient__Salad__2WBlr\",\"Bacon\":\"BurgerIngredient__Bacon__2RZZH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__1VROp\",\"Label\":\"Input__Label__1tOSX\",\"InputElement\":\"Input__InputElement__3TB0k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer__SideDrawer__3wvlM\",\"Open\":\"SideDrawer__Open__3xsf8\",\"Close\":\"SideDrawer__Close__2S6c7\",\"Logo\":\"SideDrawer__Logo__10IHv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl__BuildControl__Z5kdB\",\"Label\":\"BuildControl__Label__3jD_u\",\"Less\":\"BuildControl__Less__3pGle\",\"More\":\"BuildControl__More__3qDTF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar__Toolbar__2hkfg\",\"Logo\":\"Toolbar__Logo__24rue\",\"DesktopOnly\":\"Toolbar__DesktopOnly__15Sc_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem__NavigationItem__3YSjr\",\"active\":\"NavigationItem__active__2GQz1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls__BuildControls__220uz\",\"OrderButton\":\"BuildControls__OrderButton__1ScSk\",\"enable\":\"BuildControls__enable__3XAWA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button__ajevi\",\"Success\":\"Button__Success__1DMln\",\"Danger\":\"Button__Danger__18hYt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout__Content__2UQcM\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo__Logo__2A07e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems__NavigationItems__3HY9i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle__DrawerToggle__1eThf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop__Backdrop__eeZpu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal__Modal__cd320\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger__Burger__2h2kL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner__Loader__3dgUo\",\"load6\":\"Spinner__load6__3Ebkm\",\"round\":\"Spinner__round__2-YqU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary__CheckoutSummary__2F3IW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData__ContactData__1whvJ\",\"Input\":\"ContactData__Input__2uU-e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order__Order__W-Npf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth__Auth__1TInt\",\"Input\":\"Auth__Input__G6tYX\"};"],"sourceRoot":""}